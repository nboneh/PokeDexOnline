package com.Boneh.Nir.Quiz4.dao.hibernate;

import java.util.Collection;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;

import no.uio.inf5750.example.dao.PersonDAO;
import no.uio.inf5750.example.dao.hibernate.util.HibernateUtil;
import no.uio.inf5750.example.model.Person;

public class HibernateDVDDAO
    implements DVDDAO
{
    public int savePerson( Person person )
    {
        Session session = HibernateUtil.getCurrentSession();
        
        Transaction transaction = session.beginTransaction();
        
        int id = (Integer) session.save( person );
        
        transaction.commit(); // No error handling considered
        
        return id;
    }
    
    public Person getPerson( int id )
    {
        Session session = HibernateUtil.getCurrentSession();
        
        return (Person) session.get( Person.class, id );
    }    

    public Person getPerson( String firstName, String lastName ) // Using Query
    {
        Session session = HibernateUtil.getCurrentSession();
        
        String hql = "from Person where firstName = :firstName and lastName = :lastName";
        
        Query query = session.createQuery( hql );
        
        query.setString( "firstName", firstName );
        query.setString( "lastName", lastName );
        
        return (Person) query.uniqueResult();
    }
    
    @SuppressWarnings( "unchecked" )
    public Collection<Person> getPersonsByAge( int age, int maxResults ) // Using Criteria
    {
        Session session = HibernateUtil.getCurrentSession();
        
        Criteria criteria = session.createCriteria( Person.class );
        
        criteria.add( Restrictions.eq( "age", age ) );
        criteria.setMaxResults( maxResults );
        
        return criteria.list();
    }
}
